# ==============================================================================
# docker-compose.yml - Orchestrates multiple Docker containers
# ==============================================================================
# This file defines and configures all services (containers) needed to run
# the Laravel application. It handles networking, volumes, and dependencies
# between containers, making it easy to start the entire stack with one command.
# ==============================================================================

# Specify the Docker Compose file format version
# Version 3.8 supports all features we need and is widely compatible
version: '3.8'

# Define all the services (containers) that make up our application
services:

  # ===========================================================================
  # PHP-FPM Service - Processes PHP code for Laravel
  # ===========================================================================
  php:
    # Build configuration - tells Docker how to build this container
    build:
      context: .              # Use current directory as build context (where files are)
      dockerfile: Dockerfile  # Name of the Dockerfile to use for building

    # Give the container a friendly name (easier to identify in docker ps)
    container_name: laravel-php-fpm

    # Restart policy - automatically restart if container crashes
    # "unless-stopped" means restart always except when manually stopped
    restart: unless-stopped

    # Set working directory inside the container
    working_dir: /var/www/html

    # Volumes - mount host directories into the container
    # This enables live code editing without rebuilding the container
    volumes:
      - ./:/var/www/html    # Mount current directory to /var/www/html in container
                            # Changes in your code are immediately reflected

    # Connect this service to our custom network
    networks:
      - laravel-network

  # ===========================================================================
  # NGINX Service - Web server that handles HTTP requests
  # ===========================================================================
  nginx:
    # Use pre-built Alpine-based Nginx image (smaller, faster)
    # Alpine Linux is a minimal Linux distribution, reducing image size
    image: nginx:alpine

    # Friendly container name
    container_name: laravel-nginx

    # Restart policy
    restart: unless-stopped

    # Port mapping - expose container ports to host machine
    # Format: "host_port:container_port"
    ports:
      - "8080:80"           # Access the app at http://localhost:8080
                            # Host port 8080 maps to container port 80

    # Volumes - mount files/directories from host to container
    volumes:
      - ./:/var/www/html    # Mount Laravel code so Nginx can serve static files
                            # (CSS, JS, images from public directory)
      
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
                            # Mount our custom Nginx configuration
                            # Overrides default config to work with Laravel and PHP-FPM

    # Dependencies - ensure PHP service starts before Nginx
    # Nginx needs PHP-FPM to be running to proxy PHP requests
    depends_on:
      - php

    # Connect to the same network as PHP service
    # This allows Nginx to communicate with PHP-FPM
    networks:
      - laravel-network

# ==============================================================================
# Networks - Define custom networks for container communication
# ==============================================================================
networks:
  laravel-network:
    # Use bridge driver - creates an internal network for containers
    # Containers on the same bridge network can communicate using service names
    # Example: Nginx can reach PHP using "php:9000" as the address
    driver: bridge
